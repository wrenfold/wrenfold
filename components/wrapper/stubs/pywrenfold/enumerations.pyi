from typing import ClassVar

class NumberSet:
    __members__: ClassVar[dict] = ...  # read-only
    Complex: ClassVar[NumberSet] = ...
    Real: ClassVar[NumberSet] = ...
    RealNonNegative: ClassVar[NumberSet] = ...
    RealPositive: ClassVar[NumberSet] = ...
    Unknown: ClassVar[NumberSet] = ...
    __entries: ClassVar[dict] = ...
    def __init__(self, value: int) -> None: ...
    def __eq__(self, other: object) -> bool: ...
    def __hash__(self) -> int: ...
    def __index__(self) -> int: ...
    def __int__(self) -> int: ...
    def __ne__(self, other: object) -> bool: ...
    @property
    def name(self) -> str: ...
    @property
    def value(self) -> int: ...

class RelationalOperation:
    __members__: ClassVar[dict] = ...  # read-only
    Equal: ClassVar[RelationalOperation] = ...
    LessThan: ClassVar[RelationalOperation] = ...
    LessThanOrEqual: ClassVar[RelationalOperation] = ...
    __entries: ClassVar[dict] = ...
    def __init__(self, value: int) -> None: ...
    def __eq__(self, other: object) -> bool: ...
    def __hash__(self) -> int: ...
    def __index__(self) -> int: ...
    def __int__(self) -> int: ...
    def __ne__(self, other: object) -> bool: ...
    @property
    def name(self) -> str: ...
    @property
    def value(self) -> int: ...

class StdMathFunction:
    __members__: ClassVar[dict] = ...  # read-only
    Abs: ClassVar[StdMathFunction] = ...
    Acos: ClassVar[StdMathFunction] = ...
    Acosh: ClassVar[StdMathFunction] = ...
    Asin: ClassVar[StdMathFunction] = ...
    Asinh: ClassVar[StdMathFunction] = ...
    Atan: ClassVar[StdMathFunction] = ...
    Atan2: ClassVar[StdMathFunction] = ...
    Atanh: ClassVar[StdMathFunction] = ...
    Cos: ClassVar[StdMathFunction] = ...
    Cosh: ClassVar[StdMathFunction] = ...
    Floor: ClassVar[StdMathFunction] = ...
    Log: ClassVar[StdMathFunction] = ...
    Powf: ClassVar[StdMathFunction] = ...
    Powi: ClassVar[StdMathFunction] = ...
    Signum: ClassVar[StdMathFunction] = ...
    Sin: ClassVar[StdMathFunction] = ...
    Sinh: ClassVar[StdMathFunction] = ...
    Sqrt: ClassVar[StdMathFunction] = ...
    Tan: ClassVar[StdMathFunction] = ...
    Tanh: ClassVar[StdMathFunction] = ...
    __entries: ClassVar[dict] = ...
    def __init__(self, value: int) -> None: ...
    def to_string(self) -> str: ...
    def __eq__(self, other: object) -> bool: ...
    def __hash__(self) -> int: ...
    def __index__(self) -> int: ...
    def __int__(self) -> int: ...
    def __ne__(self, other: object) -> bool: ...
    @property
    def name(self) -> str: ...
    @property
    def value(self) -> int: ...

class SymbolicConstant:
    __members__: ClassVar[dict] = ...  # read-only
    Euler: ClassVar[SymbolicConstant] = ...
    Pi: ClassVar[SymbolicConstant] = ...
    __entries: ClassVar[dict] = ...
    def __init__(self, value: int) -> None: ...
    def __eq__(self, other: object) -> bool: ...
    def __hash__(self) -> int: ...
    def __index__(self) -> int: ...
    def __int__(self) -> int: ...
    def __ne__(self, other: object) -> bool: ...
    @property
    def name(self) -> str: ...
    @property
    def value(self) -> int: ...
