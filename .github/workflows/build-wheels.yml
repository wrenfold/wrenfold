name: build-wheels

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
      - 'v[0-9]+.[0-9]+.[0-9]+rc[0-9]+'
      - 'test-release-tag'
      - 'test-build-wheels-tag'

jobs:
  # Run the CI jobs first.
  execute_ci:
    uses: ./.github/workflows/ci.yml

  build_wheels:
    name: Build wheels on ${{ matrix.sys.os }}
    runs-on: ${{ matrix.sys.os }}
    strategy:
      matrix:
        sys:
          - { os: windows-latest, shell: pwsh }
          - { os: ubuntu-latest, shell: bash }
          - { os: macos-14, shell: bash }

    defaults:
      run:
        shell: ${{ matrix.sys.shell }}

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      # https://github.com/pypa/cibuildwheel
      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel==v2.21.3

      - if: runner.os == 'Windows'
        name: Enable developer command prompt
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: amd64

      - if: runner.os == 'macOS'
        name: Select Xcode Version
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable

      - name: Build wheels
        run: python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_PLATFORM: auto
          CIBW_ARCHS_LINUX: x86_64
          CIBW_ARCHS_WINDOWS: AMD64
          CIBW_ARCHS_MACOS: arm64

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.sys.os }}-${{ strategy.job-index }}
          path: ./wheelhouse/*.whl
          retention-days: 1

  create-release:
    runs-on: ubuntu-latest
    needs: build_wheels
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - name: Print git ref
        run: echo ${{ github.ref }} ${{github.ref_name }}

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: downloaded_artifacts
          merge-multiple: true

      - name: Enumerate downloads folder
        run: ls -R downloaded_artifacts

      - name: Copy wheels
        run: rsync -av downloaded_artifacts/*.whl wheels/

      - name: Create wheel archive
        run: tar -czvf wrenfold-wheels.tar.gz wheels/

      - name: Setup python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install git-archive-all
        run: pip install git-archive-all

      - name: Create complete source archive
        run: git-archive-all -v wrenfold-source-${{ github.ref_name }}.tar.gz

      - name: "Build Changelog"
        id: build_changelog
        uses: mikepenz/release-changelog-builder-action@v4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          configuration: ".github/workflows/changelog-configuration.json"

      - name: Release
        uses: softprops/action-gh-release@v2
        if: ${{ startsWith(github.ref, 'refs/tags/') && !startsWith(github.ref, 'refs/tags/test-build-wheels-tag') }}
        with:
          files: |
            wheels/*.whl
            wrenfold-wheels.tar.gz
            wrenfold-source-${{ github.ref_name }}.tar.gz
          draft: true
          body: ${{steps.build_changelog.outputs.changelog}}
